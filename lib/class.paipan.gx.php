<?php
$GLOBALS['GX'] = [ //刑冲合害关系: [0针对天干1针对地支, 关系类型, [发起者...], 形成者, 文字描述]
	[0, 0, [0, 5], 4, '甲己合化土'],
	[0, 0, [1, 6], 0, '乙庚合化金'],
	[0, 0, [2, 7], 1, '丙辛合化水'],
	[0, 0, [3, 8], 2, '丁壬合化木'],
	[0, 0, [4, 9], 3, '戊癸合化火'],
	[0, 1, [0, 6], -1, '甲庚冲'],
	[0, 1, [1, 7], -1, '乙辛冲'],
	[0, 1, [2, 8], -1, '丙壬冲'],
	[0, 1, [3, 9], -1, '丁癸冲'],
	[1, 2, [0, 1], 4, '子丑合化土'],
	[1, 2, [2, 11], 2, '寅亥合化木'],
	[1, 2, [3, 10], 3, '卯戌合化火'],
	[1, 2, [4, 9], 0, '辰酉合化金'],
	[1, 2, [5, 8], 1, '巳申合化水'],
	[1, 2, [6, 7], 3, '午未合化火'],
	[1, 3, [2, 3, 4], 2, '寅卯辰会木'],
	[1, 3, [5, 6, 7], 3, '巳午未会火'],
	[1, 3, [8, 9, 10], 0, '申酉戌会金'],
	[1, 3, [11, 0, 1], 1, '亥子丑会水'],
	[1, 4, [2, 6, 10], 3, '寅午戌三合火'],
	[1, 4, [8, 0, 4], 1, '申子辰三合水'],
	[1, 4, [5, 9, 1], 0, '巳酉丑三合金'],
	[1, 4, [11, 3, 7], 2, '亥卯未三合木'],
	[1, 5, [0, 6], -1, '子午冲'],
	[1, 5, [1, 7], -1, '丑未冲'],
	[1, 5, [2, 8], -1, '寅申冲'],
	[1, 5, [3, 9], -1, '卯酉冲'],
	[1, 5, [4, 10], -1, '辰戌冲'],
	[1, 5, [5, 11], -1, '巳亥冲'],
	[1, 6, [0, 7], -1, '子未害'],
	[1, 6, [1, 6], -1, '丑午害'],
	[1, 6, [2, 5], -1, '寅巳害'],
	[1, 6, [3, 4], -1, '卯辰害'],
	[1, 6, [8, 11], -1, '申亥害'],
	[1, 6, [9, 10], -1, '酉戌害'],
	[1, 7, [2, 5], -1, '寅巳相刑'],
	[1, 7, [5, 8], -1, '巳申相刑'],
	[1, 7, [8, 2], -1, '申寅相刑'],
	[1, 7, [1, 10], -1, '丑戌相刑'],
	[1, 7, [10, 7], -1, '戌未相刑'],
	[1, 7, [7, 1], -1, '未丑相刑'],
	[1, 7, [0, 3], -1, '子卯相刑'],
	[1, 7, [9, 9], -1, '酉酉相刑'],
	[1, 7, [11, 11], -1, '亥亥相刑'],
	[1, 7, [6, 6], -1, '午午相刑'],
	[1, 7, [4, 4], -1, '辰辰相刑'],
	[1, 8, [2, 5, 8], -1, '寅巳申三刑'],
	[1, 8, [1, 10, 7], -1, '丑戌未三刑'],
	[1, 9, [3, 8], -1, '卯申暗合'],
	[1, 9, [6, 11], -1, '午亥暗合'],
	[1, 9, [1, 2], -1, '丑寅暗合'],
	[1, 9, [2, 7], -1, '寅未暗合'],
	[1, 9, [0, 10], -1, '子戌暗合'],
	[1, 9, [0, 4], -1, '子辰暗合'],
	[1, 9, [5, 9], -1, '巳酉暗合'],
];
/**
 * Finding All Element Combinations of an Array https://docstore.mik.ua/orelly/webprog/pcook/ch04_25.htm
 * @param  array   $array
 * @return array
 */
function pc_array_power_set($array) {
	$results = [[]];
	foreach ($array as $element) {
		foreach ($results as $combination) {
			array_push($results, array_merge([$element], $combination));
		}
	}
	return $results;
}
/**
 * 从天干地支数组查出所有刑冲合害关系
 * @param  array   $tg 天干数组
 * @param  array   $dz 地支数组
 * @return array
 */
function GetGX($tg, $dz) {
	$list = [];
	foreach ($GLOBALS['GX'] as $gx) {
		//[0针对天干1针对地支, 关系类型, [发起者...], 形成者, 文字描述]

		$to = ($gx[0] == 0) ? $tg : $dz; //要匹配的类型

		$fd = array_intersect($to, $gx[2]); //求交集,返回的键名与$to是一致的
		if (empty(array_diff($gx[2], $fd))) {
			//说明存在此关系

			$c1 = count($fd);
			$c2 = count($gx[2]);

			$fds = []; //最终关联的
			if ($c1 < $c2) {
				//比如亥亥自刑,在只有一个亥的时候也会来这里

			}
			if ($c1 == $c2) {
				//有且只有一个此类关系
				array_push($fds, $fd);
			}
			if ($c1 > $c2) {
				//存在多个此类关系,先算出所有可能的组合,再匹配判断以精确指定是哪一个位置
				$set = pc_array_power_set(array_keys($fd));
				foreach ($set as $keys) {
					if (count($keys) != $c2) {
						continue;
					}
					$fd = [];
					foreach ($keys as $key) {
						$fd[$key] = $to[$key];
					}
					if (empty(array_diff($gx[2], $fd))) {
						array_push($fds, $fd);
					}
				}
			}
			foreach ($fds as $fd) {
				//组合成期望的返回
				array_push($list, [$fd, $gx]);
			}
		}
	}
	return $list;
}
